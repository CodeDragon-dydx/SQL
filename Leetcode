- Combine Two Tables
  Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:
  FirstName, LastName, City, State
  
  SELECT P.FirstName,
         P.LastName,
         A.City,
         A.State
    FROM Person P
    LEFT JOIN Address A
    ON P.PersonID = A.PersonID;
    
    
- Employee Bonus
  Select all employee's name and bonus whose bonus is < 1000
  
  SELECT E.name,
         B.bonus
    FROM Employee E
    LEFT JOIN Bonus B
    ON E.empID = B.empID
    WHERE B.bonus is null or B.bonus < 1000;
    
    
- Second Highest Salary
  Write a SQL query to get the second highest salary from the Employee table.
  
  SELECT MAX(Salary) AS SecondHighestSalary
    FROM Employee
    WHERE Salary < (
                        SELECT MAX(Salary)
                            FROM Employee
                    );
                    
                    ((OR))
                    
 SELECT 
    IFNULL(
            (SELECT DISTINCT Salary
                FROM Employee
                ORDER BY Salary Desc
                LIMIT 1 OFFSET 1),
                NULL
            ) AS SecondHighestSalary
            
            
- Nth Highest Salary
  Write a SQL query to get the nth highest salary from the Employee table.
  
  CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
    BEGIN
    RETURN (
              SELECT DISTINCT SALARY
                  FROM
                      (
                        SELECT Salary,
                                DENSE_RANK() OVER (ORDER BY SALARY DESC) AS RK
                            FROM Employee
                        )T
             WHERE RK = N
          );
  END


            ((OR))
            
  CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT
  BEGIN
  SET N=N-1;
  RETURN (
            SELECT IFNULL
            (
                (
                    SELECT DISTINCT Salary 
                      FROM Employee 
                      ORDER BY Salary DESC LIMIT 1 OFFSET N
                ), NULL
              )              
       );
  END
  
- Recyclable and Low Fat Products
  Write an SQL query to find the ids of products that are both low fat and recyclable.
  
  SELECT product_id
    FROM Products
    WHERE low_fats = 'Y'
    AND recyclable = 'Y';

- Find Total Time Spent by Each Employee
  Write an SQL query to calculate the total time in minutes spent by each employee on each day at the office. 
  Note that within one day, an employee can enter and leave more than once. 
  The time spent in the office for a single entry is out_time - in_time.
  
  SELECT event_day AS day,
       emp_id,
       SUM(out_time - in_time) AS total_time
    FROM Employees
    GROUP BY day, emp_id;
    
- Daily Leads and Partners

  SELECT date_id, 
       make_name,
       count(DISTINCT lead_id) AS unique_leads,
       count(DISTINCT partner_id) AS unique_partners
    FROM DailySales
    GROUP BY date_id, make_name;
    
- Invalid Tweets
  SELECT tweet_id 
    FROM Tweets
    WHERE LENGTH(content) > 15;
    
- Students With Invalid Departments
  Write an SQL query to find the id and the name of all students who are enrolled in departments that no longer exists.
  
  SELECT ID,Name
    FROM Students
    WHERE department_id NOT IN
    (
        SELECT DISTINCT ID
            FROM Departments
    );
