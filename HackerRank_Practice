- Query the NAME field for all American cities in the CITY table with populations larger than 120000. The CountryCode for America is USA.

select NAME from CITY 
where COUNTRYCODE = 'USA' and POPULATION > 120000

- Query all columns (attributes) for every row in the CITY table.

select * from CITY

- Query all columns for a city in CITY with the ID 1661.

select * from CITY where ID = 1661

- Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.

select * from CITY where COUNTRYCODE = 'JPN'

- Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is JPN.

select NAME from CITY where COUNTRYCODE = 'JPN'

- Query a list of CITY and STATE from the STATION table.

select CITY, STATE from STATION

- Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer.

select distinct CITY from STATION where ID%2 = 0

- Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.

select count(CITY) - count(distinct CITY) from STATION

- Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). 
  If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

-
select CITY, length(CITY)
    from STATION
    order by length(CITY), CITY limit 1;
    
select CITY, length(CITY)
    from STATION
    order by length(CITY) desc, CITY asc limit 1;
    
    (OR)
    
    ****ORACLE***
    
    select * from
    (
      select CITY, length(CITY)
        from STATION
        order by length(CITY), CITY) 
       where ROWNUM = 1
            union
    select * from 
    (
      select CITY, length(CITY)
        from STATION
        order by length(CITY) desc, CITY) 
       where ROWNUM = 1;

- Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

select distinct CITY from STATION where lower(substring(CITY,1,1)) in ('a','e','i','o','u')

- Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

select distinct CITY from STATION where lower(substring(CITY, -1, 1) in ('a','e','i','o','u'))

- Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

select distinct CITY from STATION where lower(substring(CITY,1,1)) in ('a','e','i','o','u') and lower(substring(CITY,-1,1)) in ('a','e','i','o','u')

- Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

select distinct CITY from STATION where lower(substring(CITY,1,1)) not in ('a','e','i','o','u')

- Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

select distinct CITY from STATION where lower(substring(CITY,-1,1)) not in ('a','e','i','o','u') 

- Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

select distinct CITY from STATION where lower(substring(CITY,1,1)) not in ('a','e','i','o','u') or lower(substring(CITY,-1,1)) not in ('a','e','i','o','u')

- Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.

select distinct CITY from STATION where lower(substring(CITY,1,1)) not in ('a','e','i','o','u') and lower(substring(CITY,-1,1)) not in ('a','e','i','o','u')

- Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. 
  If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), 
  secondary sort them by ascending ID.
  
  select NAME from STUDENTS where MARKS > 75 order by SUBSTRING(NAME,-3,3), ID

- Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.

select NAME from EMPLOYEE order by NAME

- Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than  per month who have been employees 
  for less than  months. Sort your result by ascending employee_id.
  
  select NAME from EMPLOYEE where SALARY > 2000 and MONTHS < 10
  
- Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

  select sum(POPULATION) from CITY where COUNTRYCODE = 'JPN'
  
- Query the difference between the maximum and minimum populations in CITY.

  select max(POPULATION) - min(POPULATION) from CITY
  
- Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard's  
  key was broken until after completing the calculation. She wants your help finding the difference between her miscalculation (using salaries with any zeroes removed), 
  and the actual average salary.
  Write a query calculating the amount of error (i.e.:  average monthly salaries), and round it up to the next integer.
  
  select ceil(avg(SALARY) - avg(replace(SALARY, 0, ''))) from EMPLOYEES
